{"version":3,"sources":["views/Home/hooks/useDocuments.ts","views/Home/Home.tsx"],"names":["SOCKET_HOST","process","useDocuments","useState","socket","setSocket","token","setToken","setUsers","username","host","setHost","documents","setDocuments","useEffect","axios","post","email","password","then","response","data","catch","error","console","docs","Array","from","length","_","index","id","name","isFolder","io","reconnection","auth","type","Object","keys","loadFiles","loadUsers","loadDownloadedFile","emit","hosts","listDir","path","to","userID","on","documentsList","message","map","i","isDir","users","chunks","status","push","chunk","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","filename","click","loading","hasDocuments","handleDownload","Home","title","onClick","EmptyFeedback","selectFiles","multiple","log"],"mappings":"wOAIMA,EAAmBC,mIAAYD,aAAe,4BAgIrCE,MA1Hf,WACI,MAA4BC,qBAA5B,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAiB,IAA3C,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,IAAnC,mBAAcK,GAAd,WACA,EAAwBL,mBAAc,CAAEM,SAAU,gBAAlD,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCR,mBAAS,IAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACNC,IAAMC,KAAK,oCAAqC,CAC5CC,MAAO,iBACPC,SAAU,aACXC,MAAK,SAACC,GACLb,EAASa,EAASC,KAAKf,UACxBgB,OAAM,SAACC,GACNC,QAAQD,MAAM,2CACdC,QAAQD,MAAMA,GACd,IAAME,EAAYC,MAAMC,KAAK,CAAEC,OAAQ,KAAM,SAACC,EAAGC,GAAJ,MAAe,CACxDC,GAAG,GAAD,OAAKD,GACPE,KAAK,UAAD,OAAYF,EAAQ,GACxBG,UAAU,MAEdpB,EAAaY,QAElB,IAEHX,qBAAU,WACNR,GAASD,EAAU6B,aAAGlC,EAAa,CAC/BmC,cAAc,EACdC,KAAM,CACF9B,MAAOA,EACPG,SAAU,WACV4B,KAAM,eAGf,CAAC/B,IAEPQ,qBAAU,WACNV,GAAUkC,OAAOC,KAAKnC,GAAQwB,OAAS,IAChCY,IACAC,IACAC,IAEAtC,EAAOuC,KAAK,mBAAoB,CAC5BC,MAAO,CACH,cACA,oBAIb,CAACxC,IAEPU,qBAAU,WACTV,GAAUM,GAAQmC,MACb,CAACnC,IAEJ,IAAMmC,EAAU,WACZzC,EAAOuC,KAAK,eAAgB,CACjCG,KAAM,sCACNnB,KAAMvB,EAAO2B,GACbgB,GAAIrC,EAAKsC,UAILR,EAAY,WACjBpC,EAAO6C,GAAG,kBAAkB,SAAC5B,GAC5B,IAAM6B,EAAgB7B,EAAK8B,QAAQC,KAAI,SAACD,EAAcE,GAAf,MAA8B,CACpEtB,GAAG,GAAD,OAAKsB,GACPrB,KAAMmB,EAAQnB,KACdC,SAAUkB,EAAQG,UAEnBzC,EAAaqC,OAINT,EAAY,WACpBrC,EAAO6C,GAAG,oBAAoB,SAACM,GAClBA,EAAM3B,OAAS,GAC1BjB,EAAQ4C,EAAM,IACN/C,EAAS+C,OAIXb,EAAqB,WACvB,IAAMc,EAAc,GAC1BpD,EAAO6C,GAAG,uBAAuB,SAAC5B,GACxB,GAAmB,gBAAhBA,EAAKoC,OACJD,EAAOE,KAAKrC,EAAKsC,WACd,CACH,IAAMC,EAAO,IAAIC,KAAKL,EAAQ,CAACnB,KAAMhB,EAAKgB,OACpCyB,EAAMC,IAAIC,gBAAgBJ,GAC1BK,EAAIC,SAASC,cAAc,KACjCF,EAAEG,KAAON,EACTG,EAAEI,SAAWhD,EAAKiD,SAClBL,EAAEM,aAiBd,MAAO,CACHC,SAJS,EAKTC,cAJc,EAKd7D,YACA4B,YACAC,YACAI,UACAH,qBACAgC,eApBmB,SAACR,GAC1B9D,EAAOuC,KAAK,oBAAqB,CACvBG,KAAM,sCACNwB,SAAUJ,EAASlC,KACnBL,KAAMvB,EAAO2B,GACbgB,GAAIrC,EAAKsC,Y,gBCpEN2B,MA/Bf,WACE,MAAsEzE,IAA9DU,EAAR,EAAQA,UAAW6D,EAAnB,EAAmBA,aAAcD,EAAjC,EAAiCA,QAAS3B,EAA1C,EAA0CA,QAAS6B,EAAnD,EAAmDA,eAMnD,OAAIF,EAAgB,KAEfC,EAQD,cAAC,IAAD,CAAmBG,MAAM,gBAAgB/B,QAASA,EAAlD,SACGjC,EAAUwC,KAAI,gBAAGrB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,SAAaC,SAExB,cAAC,IAAD,CAAiBF,GAAIA,EAAIC,KAAMA,GAAlBD,GAEb,qBAAK8C,QAAS,kBAAMH,EAAe,CAAC1C,UAApC,SACI,cAAC,IAAD,CAAeA,KAAMA,GAAVD,UAZrB,cAAC,IAAgB+C,cAAjB,UACE,cAAC,IAAD,CAAQD,QATc,kBAC1BE,YAAY,CAAEC,UAAU,IAAQ7D,KAAKK,QAAQyD,MAQzC","file":"static/js/5.8675c5f8.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport axios from \"axios\";\n\nconst SOCKET_HOST: any = process.env.SOCKET_HOST || \"http://13.59.130.193:3004\";\n\n/**\n *\n * @returns\n */\nfunction useDocuments() {\n    const [socket, setSocket] = useState<any>();\n    const [token, setToken] = useState<string>(\"\");\n    const [users, setUsers] = useState([]);\n    const [host, setHost] = useState<any>({ username: \"clientNode1\" });\n    const [documents, setDocuments] = useState([]);\n    \n    useEffect(() => {\n        axios.post(\"http://3.129.62.138:3000/api/auth\", {\n            email: \"teste@mail.com\",\n            password: \"12345678\"\n        }).then((response) => {\n            setToken(response.data.token);\n        }).catch((error) => {\n            console.error(\"An error has occurred on fetch auth API\");\n            console.error(error);\n            const docs: any = Array.from({ length: 35 }, (_, index) => ({\n                id: `${index}`,\n                name: `Folder ${index + 1}`,\n                isFolder: true,\n            }));\n            setDocuments(docs);\n        })\n    }, [])\n\n    useEffect(() => {\n        token && setSocket(io(SOCKET_HOST, {\n            reconnection: true,\n            auth: {\n                token: token,\n                username: \"reactApp\",\n                type: \"client\"\n            }\n        }))\n    }, [token])\n\n\tuseEffect(() => {\t\t\n\t\tif(socket && Object.keys(socket).length > 0){\n            loadFiles();\n            loadUsers();\n            loadDownloadedFile();\n\n            socket.emit(\"server:listHosts\", {\n                hosts: [\n                    \"clientNode1\",\n                    \"clientNode2\"\n                ]\n            });\n\t\t}\n    }, [socket]);\n\n\tuseEffect(() => {\n\t\tsocket && host && listDir()\n    }, [host]);\n\n    const listDir = () => {\n        socket.emit(\"host:listDir\", {\n\t\t\tpath: \"/Users/caiomorais/Documents/Teste2/\",\n\t\t\tfrom: socket.id,\n\t\t\tto: host.userID\n\t\t});\n    }\n\t\n\tconst loadFiles = () => {\n\t\tsocket.on(\"client:listDir\", (data: any)=>{\n\t\t\tconst documentsList = data.message.map((message: any, i: number) => ({\n\t\t\t\tid: `${i}`,\n\t\t\t\tname: message.name,\n\t\t\t\tisFolder: message.isDir\n            }));\n\t\t\tsetDocuments(documentsList);\n\t\t})\n\t}\n    \n    const loadUsers = () => {\n\t\tsocket.on(\"client:listHosts\", (users: any) => {\n            if(users.length > 0)\n\t\t\t\tsetHost(users[0])\n            setUsers(users);\n        });\n    }\n\n    const loadDownloadedFile = () => {\n        const chunks: any = [];\n\t\tsocket.on(\"client:downloadFile\", (data: any) => {\n            if(data.status === \"in_progress\"){\n                chunks.push(data.chunk);\n            } else {\n                const blob = new Blob(chunks, {type: data.type});\n                const url = URL.createObjectURL(blob);\n                const a = document.createElement('a');\n                a.href = url;\n                a.download = data.filename;\n                a.click();\n            }\n        });\n    }\n\n    const handleDownload = (document: any) => {\n\t\tsocket.emit(\"host:downloadFile\", {\n            path: \"/Users/caiomorais/Documents/Teste2/\",\n            filename: document.name,\n            from: socket.id,\n            to: host.userID\n        });\n    }\n\n\tconst loading = false;\n\tconst hasDocuments = true;\n\n    return {\n        loading,\n        hasDocuments,\n        documents,\n        loadFiles,\n        loadUsers,\n        listDir,\n        loadDownloadedFile,\n        handleDownload\n    };\n}\n\nexport default useDocuments;\n","import {\n  Button,\n  FeedbackMessage,\n  File,\n  Folder,\n  NavigationContext\n} from \"components\";\nimport useDocuments from \"./hooks/useDocuments\";\nimport selectFiles from \"select-files\";\n\n/**\n * Main page on opening the application. Responsible for\n * showing all user folders.\n */\nfunction Home() {\n  const { documents, hasDocuments, loading, listDir, handleDownload } = useDocuments();\n\n  const handleFileSelection = () =>\n    selectFiles({ multiple: true }).then(console.log);\n\n  // TODO: add placeholder\n  if (loading) return null;\n\n  if (!hasDocuments)\n    return (\n      <FeedbackMessage.EmptyFeedback>\n        <Button onClick={handleFileSelection}>Enviar arquivo</Button>\n      </FeedbackMessage.EmptyFeedback>\n    );\n\n  return (\n      <NavigationContext title=\"Meus arquivos\" listDir={listDir}>\n        {documents.map(({ id, name, isFolder }) =>\n          isFolder ? (\n            <Folder key={id} id={id} name={name} />\n          ) : (\n            <div onClick={() => handleDownload({name})}>\n                <File key={id} name={name}/>\n            </div>\n          )\n        )}\n      </NavigationContext>\n  );\n}\n\nexport default Home;\n"],"sourceRoot":""}